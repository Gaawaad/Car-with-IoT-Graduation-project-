/**********************************************************************************************************************

 *  FILE DESCRIPTION
 *  -------------------------------------------------------------------------------------------------------------------
 *         File:  PWM.h
 *       Module:  -
 *
 *  Description:  <Write File DESCRIPTION here>
 *
 *********************************************************************************************************************/
#ifndef PWM_H
#define PWM_H

/**********************************************************************************************************************
 * INCLUDES
 *********************************************************************************************************************/
#include "Std_types.h"
#include "PORT.h"
/**********************************************************************************************************************
 *  GLOBAL CONSTANT MACROS
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  GLOBAL FUNCTION MACROS
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  GLOBAL DATA TYPES AND STRUCTURES
 *********************************************************************************************************************/
typedef enum
{
    PWM_M0 = 0,
    PWM_M1
} PWM_M_t;

typedef enum
{
    PWM_Disable = 0,
    PWM_Enable
} PWM_EN_t;

typedef enum
{
    SYS_CLOCK = 0,
    CLOCK_DIVIDER
} PWM_CLOCK_CRS_t;

typedef enum
{
    PWM_G0 = 0,
    PWM_G1,
    PWM_G2,
    PWM_G3
} PWM_Gen_Blocks_t;

typedef enum
{
    M0PWM0 = 0,
    M0PWM1,
    M0PWM2,
    M0PWM3,
    M0PWM4,
    M0PWM5,
    M0PWM6,
    M0PWM7,

    M1PWM0,
    M1PWM1,
    M1PWM2,
    M1PWM3,
    M1PWM4,
    M1PWM5,
    M1PWM6,
    M1PWM7
} PWM_Channel_t;

typedef enum
{
    DOWN_COUNT = 0,
    UP_COUNT

} CH_count_mode;

typedef struct
{
    PWM_M_t PWM_Module;
    PWM_EN_t EN;
    PWM_CLOCK_CRS_t clockSurce;
} PWM_Cfg_t;

typedef struct
{
    PWM_M_t PWM_Module;
    PWM_Gen_Blocks_t PWM_Gen;
    CH_count_mode countMode;
    u32 Frequency;
    u8 DutyCycle;
    PWM_EN_t EN;
} PWM_GEN_Cfg_t;

typedef struct
{
    PWM_Channel_t channel;
    PWM_EN_t EN;
} PWM_Channel_Cfg_t;
/**********************************************************************************************************************
 *  GLOBAL DATA PROTOTYPES
 *********************************************************************************************************************/

/**********************************************************************************************************************
 *  GLOBAL FUNCTION PROTOTYPES
 *********************************************************************************************************************/
void PWM_Init(void);
void PWM_Start(PWM_Channel_t Channel);
void PWM_Stop(PWM_Channel_t Channel);
void PWM_SET_Frequency_Duty(PWM_Channel_t Channel, u32 frequency, u8 DutyCycle);
void PWM_Set_Frequency(PWM_Channel_t Channel, u32 frequency);
void PWM_Set_Duty(PWM_Channel_t Channel, u8 DutyCycle);
#endif /* PWM_H */

/**********************************************************************************************************************
 *  END OF FILE: PWM.h
 *********************************************************************************************************************/
